1. AngularJS: Todo en uno
"Angular JS es una sola unidad"

- AngularJS mezcla controlador, vista, modelo y l√≥gica en un solo archivo o componente.
- Esto puede hacer que el c√≥digo se vuelva pesado y dif√≠cil de mantener, porque todo est√° junto: HTML, l√≥gica de negocio y estructura.
üîç Ejemplo: En AngularJS puedes tener un archivo .html con directivas, un .js con el controlador, y todo depende de c√≥mo se conecten.

‚öõÔ∏è 2. React: Separaci√≥n y simplicidad
"React es lo m√°s popular" + "Modelo - funci√≥n" + "Solo tenemos l√≠neas de c√≥digo que le agregan funcionalidad"

- React se basa en componentes funcionales: cada uno es una funci√≥n que devuelve una vista (JSX).
- No hay controlador ni modelo expl√≠cito como en AngularJS. Todo se maneja con props, estado y funciones.
üîß Ejemplo:
function Saludo({ nombre }) {
  return <h1>Hola, {nombre}</h1>;
}


Aqu√≠ tienes l√≥gica, vista y datos en una funci√≥n clara y reutilizable.

üß† 3. Estructura React: App ‚Üí Componente ‚Üí Vista
"App -> React -> componente -> vista"

- Tu aplicaci√≥n React empieza con un componente ra√≠z (App), que se divide en subcomponentes.
- Cada componente maneja su propia l√≥gica y vista, lo que permite modularidad y escalabilidad.
üìå En tu proyecto, esto se traduce en dividir funcionalidades como login, dashboard, PDF viewer, etc., en componentes separados.

üîÑ 4. ¬øCu√°ndo empezamos a entender React?
"Es complicado pero..."

- Al principio React puede parecer abstracto, pero cuando entiendes c√≥mo fluye la informaci√≥n (props, estado) y c√≥mo se actualiza la vista, todo empieza a tener sentido.
- Lo clave es pensar en componentes como funciones puras que reaccionan a cambios de datos.

React, es todo dinamico, no es dinamico - Apicaciones privadas

Hay framework de react 
	.Solid Js - es como deber√≠a haber sido react desde un principio - muy liviano
	.Next Js - supera con creces a react porque tiene algunas ventajas sobre react - 
		-Mejor SEO: Al renderizar en el servidor, los motores de b√∫squeda pueden indexar mejor tu contenido.
		- Carga m√°s r√°pida: Las p√°ginas est√°ticas se sirven como HTML puro, lo que reduce el tiempo de espera.
		- Escalabilidad: Puedes construir desde un blog hasta una app empresarial con la misma base.
		- Fullstack en React: Puedes tener frontend y backend en un solo proyecto.




