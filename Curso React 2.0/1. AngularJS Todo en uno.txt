Curso de react completo

1. AngularJS: Todo en uno
"Angular JS es una sola unidad"
- AngularJS mezcla controlador, vista, modelo y l√≥gica en un solo archivo o componente.
- Esto puede hacer que el c√≥digo se vuelva pesado y dif√≠cil de mantener, porque todo est√° junto: HTML, l√≥gica de negocio y estructura.
üîç Ejemplo: En AngularJS puedes tener un archivo .html con directivas, un .js con el controlador, y todo depende de c√≥mo se conecten.

‚öõÔ∏è 2. React: Separaci√≥n y simplicidad
"React es lo m√°s popular" + "Modelo - funci√≥n" + "Solo tenemos l√≠neas de c√≥digo que le agregan funcionalidad"
- React se basa en componentes funcionales: cada uno es una funci√≥n que devuelve una vista (JSX).
- No hay controlador ni modelo expl√≠cito como en AngularJS. Todo se maneja con props, estado y funciones.
üîß Ejemplo:
function Saludo({ nombre }) {
  return <h1>Hola, {nombre}</h1>;
}
Aqu√≠ tienes l√≥gica, vista y datos en una funci√≥n clara y reutilizable.


üß† 3. Estructura React: App ‚Üí Componente ‚Üí Vista
"App -> React -> componente -> vista"
- Tu aplicaci√≥n React empieza con un componente ra√≠z (App), que se divide en subcomponentes.
- Cada componente maneja su propia l√≥gica y vista, lo que permite modularidad y escalabilidad.
üìå En tu proyecto, esto se traduce en dividir funcionalidades como login, dashboard, PDF viewer, etc., en componentes separados.

üîÑ 4. ¬øCu√°ndo empezamos a entender React?
"Es complicado pero..."
- Al principio React puede parecer abstracto, pero cuando entiendes c√≥mo fluye la informaci√≥n (props, estado) y c√≥mo se actualiza la vista, todo empieza a tener sentido.
- Lo clave es pensar en componentes como funciones puras que reaccionan a cambios de datos.

React, es todo dinamico - Apicaciones privadas

Hay framework de react 
	.Solid Js - es como deber√≠a haber sido react desde un principio - muy liviano
			-Reactividad real  (signals)
	.Next Js - supera con creces a react porque tiene algunas ventajas sobre react y adem√°s trabaja para empresas privadas y publicas - 
		-Tiene su propio routing y es basado en carpetas
		-Mejor SEO: Al renderizar en el servidor, los motores de b√∫squeda pueden indexar mejor tu contenido.
		- Carga m√°s r√°pida: Las p√°ginas est√°ticas se sirven como HTML puro, lo que reduce el tiempo de espera.
		- Escalabilidad: Puedes construir desde un blog hasta una app empresarial con la misma base.
		- Fullstack en React: Puedes tener frontend y backend en un solo proyecto.

			¬øC√≥mo funciona cada uno?
				üîπ CSR (Client-Side Rendering)
					- El servidor env√≠a una p√°gina vac√≠a con un archivo JavaScript.
					- El navegador descarga ese JS y construye la interfaz en tiempo real.
					- Ideal para apps interactivas donde el SEO no es tan importante.

				üîπ SSR (Server-Side Rendering)
					- El servidor genera el HTML completo antes de enviarlo al navegador.
					- El usuario ve contenido desde el primer momento.
					- Ideal para sitios que necesitan buen SEO o carga r√°pida inicial.

			-Pero eso si tarda un poco mas en cargar, porque todo lo renderiza y no tiene virtual Dom

	.Remix - SSR 

üö¶ ¬øQu√© es el routing?
En desarrollo web, routing (o enrutamiento) es el sistema que decide qu√© contenido mostrar seg√∫n la URL que el usuario visita.
Iniciamos con vite y en la primera clase se va a ver archivos, que es muy importante jhon Edward.

strictMode, controlar la manera que funcionen los componentes, crea un componente, lo destruye y revisa si cuando se vuelve a construir y se vuelve a llamar.

Asi que hay es donde importa el DOM, el dom es reescribir todo de nuevo y ah√≠ es donde react no utiliza todo el DOM sino que usa el virtual DOM, cambiando solo lo que no es igual a lo que ya estaba. -  lo que se llama reconciliaci√≥n

el por default 

		.Tailwind CSS es un framework de estilos que te permite dise√±ar interfaces directamente desde el HTML/JSX, usando clases utilitarias. En lugar de escribir CSS tradicional, aplicas estilos con clases como bg-blue-500, text-white, p-4, etc. Directamente sobre la linea de codigo

Detecci√≥n de cambios
SPA - singlepageaplication - librer√≠as de componentes 
trigger - es el cambio, mediante un bot√≥n
Aqu√≠ vamos a tener el trigger inicial, el que inicia la aplicaci√≥n.




